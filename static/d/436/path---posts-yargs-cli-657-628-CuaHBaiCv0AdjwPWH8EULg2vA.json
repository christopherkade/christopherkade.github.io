{"data":{"markdownRemark":{"id":"fbad7544-4b80-5061-9409-65a337532b86","html":"<p><a href=\"http://yargs.js.org/\">Yargs</a> is a great library to build command line apps, simply put, it will make the process of creating an application that runs in the console a breeze. What could make it even better? It’s PIRATE themed (it’s called YARgs you guys), making it officially the best tool ever.</p>\n<p>You may know other CLIs such as <a href=\"https://cli.vuejs.org/\">vue-cli</a> to easily set up a Vue.js project or <a href=\"https://facebook.github.io/create-react-app/\">create-react-app</a>, so the concept should be familiar to most of you.</p>\n<p>In today’s article we’ll be creating a basic CLI from start to finish covering the following points:</p>\n<ul>\n<li><a href=\"#setup\">Project set up</a></li>\n<li><a href=\"#cli\">Creating a basic CLI</a></li>\n<li><a href=\"#deploy\">Deploying our CLI to NPM</a></li>\n</ul>\n<p><br><br></p>\n<h2 id=\"a-namesetupa-project-set-up\"><a href=\"#a-namesetupa-project-set-up\" aria-label=\"a namesetupa project set up permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><a name=\"setup\"></a> Project set up</h2>\n<p>Setting up the project is very easy, start by doing the following:</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token function\">mkdir</span> yargs-project\n<span class=\"token function\">cd</span> yargs-project\n<span class=\"token function\">npm</span> init -y</code></pre></div>\n<p>We now have created our project’s folder and initiated the <code class=\"language-text\">package.json</code> file that contains its meta data.</p>\n<p>Here’s the file that was created:</p>\n<p><code class=\"language-text\">package.json</code>:</p>\n<div class=\"gatsby-highlight\" data-language=\"json\"><pre class=\"language-json\"><code class=\"language-json\"><span class=\"token punctuation\">{</span>\n  <span class=\"token property\">\"name\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"yargs-example\"</span><span class=\"token punctuation\">,</span>\n  <span class=\"token property\">\"version\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"1.0.0\"</span><span class=\"token punctuation\">,</span>\n  <span class=\"token property\">\"description\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"\"</span><span class=\"token punctuation\">,</span>\n  <span class=\"token property\">\"main\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"index.js\"</span><span class=\"token punctuation\">,</span>\n  <span class=\"token property\">\"scripts\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token property\">\"test\"</span><span class=\"token operator\">:</span> \"echo \\\"Error<span class=\"token operator\">:</span> no test specified\\\"\n      &amp;&amp; exit <span class=\"token number\">1</span>\"\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  <span class=\"token property\">\"keywords\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n  <span class=\"token property\">\"author\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"\"</span><span class=\"token punctuation\">,</span>\n  <span class=\"token property\">\"license\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"ISC\"</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>We need to do a few adjustments to this file since we’re creating a CLI. It should now look like this:</p>\n<div class=\"gatsby-highlight\" data-language=\"json\"><pre class=\"language-json\"><code class=\"language-json\"><span class=\"token punctuation\">{</span>\n  <span class=\"token property\">\"name\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"yargs-example\"</span><span class=\"token punctuation\">,</span>\n  <span class=\"token property\">\"version\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"1.0.0\"</span><span class=\"token punctuation\">,</span>\n  <span class=\"token property\">\"description\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"A simple Yargs CLI\"</span><span class=\"token punctuation\">,</span>\n  <span class=\"token property\">\"bin\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token property\">\"yargs-example\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"./yargs-example.js\"</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  <span class=\"token property\">\"keywords\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span><span class=\"token string\">\"cli\"</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n  <span class=\"token property\">\"preferGlobal\"</span><span class=\"token operator\">:</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span>\n  <span class=\"token property\">\"author\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"Christopher Kade\"</span><span class=\"token punctuation\">,</span>\n  <span class=\"token property\">\"license\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"ISC\"</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>Here are the important changes to note:</p>\n<ul>\n<li>We’ve added a <code class=\"language-text\">bin</code> value, which maps the entry file we’ll create later to its executable name (you can set it to whatever you’d like)</li>\n<li>We’ve set <code class=\"language-text\">preferGlobal</code> to true, meaning that our package would prefer to be installed globally (via <code class=\"language-text\">npm install -g</code> for example)</li>\n</ul>\n<p>Other tweaks include changing the <code class=\"language-text\">description</code>, removing usuned <code class=\"language-text\">scripts</code>, adding an <code class=\"language-text\">author</code> name etc.</p>\n<p>Before we can start coding our CLI, we need to install <code class=\"language-text\">yargs</code>, do it like so:<br>\n<code class=\"language-text\">npm install yargs</code></p>\n<p>Let’s get to it.</p>\n<p><br><br></p>\n<h2 id=\"a-nameclia-creating-a-basic-cli\"><a href=\"#a-nameclia-creating-a-basic-cli\" aria-label=\"a nameclia creating a basic cli permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><a name=\"cli\"></a> Creating a basic CLI</h2>\n<p>Yargs makes it very easy to parse command line parameters, many example projects can be found <a href=\"https://github.com/yargs/yargs/blob/master/docs/examples.md\">here</a>.</p>\n<p>We’ll create a basic CLI that takes in a file as parameter and counts the number of lines it has.</p>\n<p>To do so, start by creating our main script file.<br>\n<code class=\"language-text\">touch yargs-example.js</code></p>\n<p>And fill it with the following:</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\">#<span class=\"token operator\">!</span><span class=\"token operator\">/</span>usr<span class=\"token operator\">/</span>bin<span class=\"token operator\">/</span>env node\n<span class=\"token keyword\">const</span> argv <span class=\"token operator\">=</span> <span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">'yargs'</span><span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">.</span><span class=\"token function\">usage</span><span class=\"token punctuation\">(</span><span class=\"token string\">'Usage: $0 &lt;command> [options]'</span><span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">.</span><span class=\"token function\">help</span><span class=\"token punctuation\">(</span><span class=\"token string\">'h'</span><span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">.</span><span class=\"token function\">alias</span><span class=\"token punctuation\">(</span><span class=\"token string\">'h'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'help'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>argv</code></pre></div>\n<p>Let’s cover everything line by line:</p>\n<p>1 - <code class=\"language-text\">#!/usr/bin/env node</code> is an instance of a shebang line that tells our system what interpreter to use to execute that file.</p>\n<p>2 - <code class=\"language-text\">const argv = require(&quot;yargs&quot;)</code> imports the <code class=\"language-text\">yargs</code> package.</p>\n<p>3 - <code class=\"language-text\">.usage(&#39;Usage: $0 &lt;command&gt; [options]&#39;)</code> sets the usage information of your CLI that will be displayed when the <code class=\"language-text\">--help</code> command is called.</p>\n<p>4 - <code class=\"language-text\">.help(&#39;h&#39;)</code> binds the help command to the option <code class=\"language-text\">h</code>.</p>\n<p>5 - <code class=\"language-text\">.alias(&#39;h&#39;, &#39;help&#39;)</code> creates an alias for the option <code class=\"language-text\">-h</code>, namely <code class=\"language-text\">--help</code>.</p>\n<p>As you can see, this first step is extremely simple, and <code class=\"language-text\">yargs</code> syntax is intuitive.</p>\n<br>\n<p>Next we’ll add the <code class=\"language-text\">count</code> command.</p>\n<p>Just add the following lines to your already existing CLI:</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token punctuation\">.</span><span class=\"token function\">command</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"count\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"Count the lines in a file\"</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">.</span><span class=\"token function\">example</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"$0 count -f foo.js\"</span><span class=\"token punctuation\">,</span>\n  <span class=\"token string\">\"count the lines in the given file\"</span><span class=\"token punctuation\">)</span></code></pre></div>\n<p>Once again, let’s review them line by line.</p>\n<p>1 - <code class=\"language-text\">.command(&quot;count&quot;, &quot;Count the lines in a file&quot;)</code> creates a new command with the name <code class=\"language-text\">count</code> and sets a description.</p>\n<p>2 - <code class=\"language-text\">.example(&quot;$0 count -f foo.js&quot;, &quot;count the lines in the given file&quot;)</code> creates an example with a description, it will be displayed when the user calls the <code class=\"language-text\">--help</code> option or when they mess up the command.</p>\n<br>\n<p>That’s all great, but right now running <code class=\"language-text\">node yargs-example.js count</code> doesn’t do much, next up we’ll require a file name and finish the CLI by counting and displaying its number of lines.</p>\n<p>To do so, add the following:</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token punctuation\">.</span><span class=\"token function\">alias</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"f\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"file\"</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">.</span><span class=\"token function\">nargs</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"f\"</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">.</span><span class=\"token function\">describe</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"f\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"Load a file\"</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">.</span><span class=\"token function\">demandOption</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span><span class=\"token string\">\"f\"</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span></code></pre></div>\n<p>Your file should end up looking like this:</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\">#<span class=\"token operator\">!</span><span class=\"token operator\">/</span>usr<span class=\"token operator\">/</span>bin<span class=\"token operator\">/</span>env node\n<span class=\"token keyword\">const</span> argv <span class=\"token operator\">=</span> <span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">'yargs'</span><span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">.</span><span class=\"token function\">usage</span><span class=\"token punctuation\">(</span><span class=\"token string\">'Usage: $0 &lt;command> [options]'</span><span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">.</span><span class=\"token function\">command</span><span class=\"token punctuation\">(</span><span class=\"token string\">'count'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'Count the lines in a file'</span><span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">.</span><span class=\"token function\">example</span><span class=\"token punctuation\">(</span><span class=\"token string\">'$0 count -f foo.js'</span><span class=\"token punctuation\">,</span> \n    <span class=\"token string\">'count the lines in the given file'</span><span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">.</span><span class=\"token function\">alias</span><span class=\"token punctuation\">(</span><span class=\"token string\">'f'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'file'</span><span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">.</span><span class=\"token function\">nargs</span><span class=\"token punctuation\">(</span><span class=\"token string\">'f'</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">.</span><span class=\"token function\">describe</span><span class=\"token punctuation\">(</span><span class=\"token string\">'f'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'Load a file'</span><span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">.</span><span class=\"token function\">demandOption</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span><span class=\"token string\">'f'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">.</span><span class=\"token function\">help</span><span class=\"token punctuation\">(</span><span class=\"token string\">'h'</span><span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">.</span><span class=\"token function\">alias</span><span class=\"token punctuation\">(</span><span class=\"token string\">'h'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'help'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>argv</code></pre></div>\n<p>1 - <code class=\"language-text\">.alias(&quot;f&quot;, &quot;file&quot;)</code> creates the alias <code class=\"language-text\">--file</code> for the <code class=\"language-text\">-f</code> option.</p>\n<p>2 - <code class=\"language-text\">.nargs(&quot;f&quot;, 1)</code> sets the requirement of one argument for that option (the file name), otherwise display the <code class=\"language-text\">--help</code> menu.</p>\n<p>3 - <code class=\"language-text\">.describe(&quot;f&quot;, &quot;Load a file&quot;)</code> adds a description for the option.</p>\n<p>4 - <code class=\"language-text\">.demandOption([&quot;f&quot;])</code> since we’ll need a file name, we’re demanding the option <code class=\"language-text\">-f</code>.</p>\n<br>\n<p>Finally, let’s add the program’s logic like so:</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">const</span> fs <span class=\"token operator\">=</span> <span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">'fs'</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token comment\">// Create stream with the file</span>\n<span class=\"token keyword\">const</span> s <span class=\"token operator\">=</span> fs<span class=\"token punctuation\">.</span><span class=\"token function\">createReadStream</span><span class=\"token punctuation\">(</span>argv<span class=\"token punctuation\">.</span>file<span class=\"token punctuation\">)</span>\n\n<span class=\"token keyword\">var</span> lines <span class=\"token operator\">=</span> <span class=\"token number\">0</span>\ns<span class=\"token punctuation\">.</span><span class=\"token function\">on</span><span class=\"token punctuation\">(</span><span class=\"token string\">'data'</span><span class=\"token punctuation\">,</span> <span class=\"token parameter\">buf</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n  <span class=\"token comment\">// Get the number of lines</span>\n  lines <span class=\"token operator\">+=</span> buf<span class=\"token punctuation\">.</span><span class=\"token function\">toString</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">match</span><span class=\"token punctuation\">(</span><span class=\"token regex\">/\\n/g</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>length\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n\ns<span class=\"token punctuation\">.</span><span class=\"token function\">on</span><span class=\"token punctuation\">(</span><span class=\"token string\">'end'</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n  <span class=\"token comment\">// Display the number of lines</span>\n  console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>lines<span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span></code></pre></div>\n<p>And that’s it, let’s test it out.</p>\n<div class=\"gatsby-highlight\" data-language=\"sh\"><pre class=\"language-sh\"><code class=\"language-sh\">$ node line-count.js -f package.json\n21</code></pre></div>\n<p>Up until now, we’ve been running our program this way, but if we tried running it by calling it directly we would get an error.</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">$ line-count count -f package.json\nzsh: command not found: line-count</code></pre></div>\n<p>We can fix that by registering the binary (that we defined earlier as <code class=\"language-text\">bin</code> in the <code class=\"language-text\">package.json</code>) globally using the <code class=\"language-text\">npm link</code> command.</p>\n<p>In your application’s directory, run the following:<br>\n<code class=\"language-text\">npm link</code></p>\n<p>Hurray ! You can now run your script locally like so:<br>\n<code class=\"language-text\">yargs-example count -f package.json</code></p>\n<p><br><br></p>\n<h2 id=\"a-namedeploya-deploying-our-cli-to-npm\"><a href=\"#a-namedeploya-deploying-our-cli-to-npm\" aria-label=\"a namedeploya deploying our cli to npm permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><a name=\"deploy\"></a> Deploying our CLI to NPM</h2>\n<p>Before deploying it, we’ll need to add some information to our <code class=\"language-text\">package.json</code>.</p>\n<div class=\"gatsby-highlight\" data-language=\"json\"><pre class=\"language-json\"><code class=\"language-json\"><span class=\"token property\">\"homepage\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"YOUR GITHUB REPO OR SITE HERE\"</span><span class=\"token punctuation\">,</span>\n<span class=\"token property\">\"repository\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token property\">\"type\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"git\"</span><span class=\"token punctuation\">,</span>\n  <span class=\"token property\">\"url\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"git+YOUR GITHUB REPOSITORY HERE\"</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n<span class=\"token property\">\"engines\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token property\">\"node\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\">=8\"</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span></code></pre></div>\n<p>Don’t forget to replace the <code class=\"language-text\">homepage</code> and <code class=\"language-text\">repository</code> info with your own, this will allow the npmjs.com website to fill up your future project’s page.</p>\n<p>The <code class=\"language-text\">engine</code> value simply defines the minimum version of node your project should work on. Set it to whatever your project requires (depending on what JS features you may end up using, such as <code class=\"language-text\">async/await</code>).</p>\n<p>Here are the next steps:</p>\n<ul>\n<li>Create an account on npmjs.com</li>\n<li>Run the <code class=\"language-text\">npm login</code> command and input your information</li>\n<li>Run the <code class=\"language-text\">npm publish</code> command which will automatically publish it in a matter of minutes</li>\n</ul>\n<p>That’s it ! If you wish to update your project in the future you’ll need to change its version number in the <code class=\"language-text\">package.json</code> file and then run the publish command again.</p>\n<p>You now have your own NPM package published and accessible to the community, congrats !</p>\n<p>If you have any questions, feel free to ask them on twitter <a href=\"https://twitter.com/christo_kade\">@christo_kade</a>.</p>\n<p>Thank you for reading :-)</p>","fields":{"slug":"/posts/yargs-cli","tagSlugs":["/tag/tutorial/","/tag/javascript/"]},"frontmatter":{"date":"2019-02-07","description":"YAAARG(S) MATEY!","tags":["Tutorial","Javascript"],"title":"Building a CLI with Yargs"}}},"pageContext":{"isCreatedByStatefulCreatePages":false,"slug":"/posts/yargs-cli"}}