{"data":{"markdownRemark":{"id":"e90eb6e5-6f89-5aa0-84ff-3ae80ca7652f","html":"<p>Anyone that has met me knows that I love theme parks, that’s why I recently deployed <a href=\"https://christopherkade.com/parks/\">Parks</a>, a platform to retrieve wait times at most Disneyland Park around the world.</p>\n<p>To do so I implemented an unofficial API called <a href=\"https://github.com/cubehouse/themeparks\">themeparks</a> by setting up endpoints on an Node server deployed to the free platform <a href=\"https://www.heroku.com/\">Heroku</a>.</p>\n<p>In this post I’ll go through the steps necessary to have your own API up and running on that same platform; let’s get started !</p>\n<p><br><br></p>\n<h3 id=\"step-1-setting-up-your-api\"><a href=\"#step-1-setting-up-your-api\" aria-label=\"step 1 setting up your api permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Step 1: Setting up your API</h3>\n<br>\n<h4 id=\"node\"><a href=\"#node\" aria-label=\"node permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Node</h4>\n<p>First, create your project’s repository and initialize it:</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token function\">mkdir</span> my-awesome-api\n<span class=\"token function\">cd</span> my-awesome-api\n<span class=\"token function\">npm</span> init</code></pre></div>\n<p>Which will prompt you with some basic npm configuration questions, you can go through them by pressing enter, once asked <code class=\"language-text\">entry point: (index.js)</code>, input <code class=\"language-text\">server.js</code>. That simply defines the entry point to our node program.<br>\nThis process will create a <code class=\"language-text\">package.json</code> file, it holds metadata relevant to the project.</p>\n<br>\n<h4 id=\"heroku\"><a href=\"#heroku\" aria-label=\"heroku permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Heroku</h4>\n<p>Let’s make sure you are logged in to Heroku’s CLI, if you don’t have it installed, you can do it <a href=\"https://devcenter.heroku.com/articles/heroku-cli\">here</a>. Once installed run <code class=\"language-text\">heroku login</code>, which will prompt you for Heroku account information.</p>\n<p>Once logged in, we can set up our project on Heroku by running <code class=\"language-text\">heroku create</code>, which will display:</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">Creating app<span class=\"token punctuation\">..</span>. done, ⬢ ancient-garden-55847\nhttps://ancient-garden-55847.herokuapp.com/ <span class=\"token operator\">|</span> https://git.heroku.com/ancient-garden-55847.git</code></pre></div>\n<p>Heroku sets up your application with a random (and rather soothing) name. Check out your Heroku dashboard, your project should be present.</p>\n<p>We’re all set up and ready to create some endpoints !</p>\n<p><br><br></p>\n<h3 id=\"step-2-the-first-endpoint\"><a href=\"#step-2-the-first-endpoint\" aria-label=\"step 2 the first endpoint permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Step 2: The first endpoint</h3>\n<p>Let’s start by installing the necessary packages like so:<br>\n<code class=\"language-text\">npm install express body-parser</code></p>\n<p>Create a <code class=\"language-text\">server.js</code> file with the following contents:</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">const</span> express <span class=\"token operator\">=</span> <span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">'express'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n  bodyParser <span class=\"token operator\">=</span> <span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">'body-parser'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n  app <span class=\"token operator\">=</span> <span class=\"token function\">express</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n  port <span class=\"token operator\">=</span> process<span class=\"token punctuation\">.</span>env<span class=\"token punctuation\">.</span><span class=\"token constant\">PORT</span> <span class=\"token operator\">||</span> <span class=\"token number\">3000</span>\n\napp<span class=\"token punctuation\">.</span><span class=\"token function\">use</span><span class=\"token punctuation\">(</span>bodyParser<span class=\"token punctuation\">.</span><span class=\"token function\">json</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n\napp<span class=\"token punctuation\">.</span><span class=\"token function\">get</span><span class=\"token punctuation\">(</span><span class=\"token string\">'/'</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">req<span class=\"token punctuation\">,</span> res</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n  res<span class=\"token punctuation\">.</span><span class=\"token function\">send</span><span class=\"token punctuation\">(</span><span class=\"token string\">'Server works !'</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n\napp<span class=\"token punctuation\">.</span><span class=\"token function\">listen</span><span class=\"token punctuation\">(</span>port<span class=\"token punctuation\">)</span>\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">'Server listening on port: '</span> <span class=\"token operator\">+</span> port<span class=\"token punctuation\">)</span></code></pre></div>\n<p>And navigate to <code class=\"language-text\">localhost:3000</code> on your browser, you should see the following: <code class=\"language-text\">Server works !</code>.</p>\n<p><br><br></p>\n<h3 id=\"another-example\"><a href=\"#another-example\" aria-label=\"another example permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Another example</h3>\n<p>That should be enough for you to get started on declaring your own endpoints, but I’ll show a more elaborate example using the Themeparks API mentioned before.</p>\n<p>First, I’ll install the necessary package:<br>\n<code class=\"language-text\">npm install themeparks</code></p>\n<p>Then, I’ll load the Themeparks module, set up options for my header and define a basic endpoint to retrieve every theme park the API handles (in the same <code class=\"language-text\">server.js</code> file):</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">const</span> Themeparks <span class=\"token operator\">=</span> <span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">'themeparks'</span><span class=\"token punctuation\">)</span>\n\napp<span class=\"token punctuation\">.</span><span class=\"token function\">use</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">req<span class=\"token punctuation\">,</span> res<span class=\"token punctuation\">,</span> next</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  res<span class=\"token punctuation\">.</span><span class=\"token function\">setHeader</span><span class=\"token punctuation\">(</span><span class=\"token string\">'Access-Control-Allow-Origin'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'http://localhost:4200'</span><span class=\"token punctuation\">)</span>\n  res<span class=\"token punctuation\">.</span><span class=\"token function\">setHeader</span><span class=\"token punctuation\">(</span><span class=\"token string\">'Access-Control-Allow-Methods'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'GET, POST, OPTIONS, PUT'</span><span class=\"token punctuation\">)</span>\n  res<span class=\"token punctuation\">.</span><span class=\"token function\">setHeader</span><span class=\"token punctuation\">(</span><span class=\"token string\">'Access-Control-Allow-Headers'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'X-Requested-With,content-type'</span><span class=\"token punctuation\">)</span>\n  res<span class=\"token punctuation\">.</span><span class=\"token function\">setHeader</span><span class=\"token punctuation\">(</span><span class=\"token string\">'Access-Control-Allow-Credentials'</span><span class=\"token punctuation\">,</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">)</span>\n  <span class=\"token function\">next</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n\napp<span class=\"token punctuation\">.</span><span class=\"token function\">get</span><span class=\"token punctuation\">(</span><span class=\"token string\">'/api/parks'</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">req<span class=\"token punctuation\">,</span> res</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">let</span> parks <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span>\n  <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">var</span> park <span class=\"token keyword\">in</span> Themeparks<span class=\"token punctuation\">.</span>Parks<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">'* '</span> <span class=\"token operator\">+</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Themeparks<span class=\"token punctuation\">.</span>Parks</span><span class=\"token punctuation\">[</span>park<span class=\"token punctuation\">]</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>Name <span class=\"token operator\">+</span> <span class=\"token string\">' ('</span> <span class=\"token operator\">+</span> park <span class=\"token operator\">+</span> <span class=\"token string\">')'</span><span class=\"token punctuation\">)</span>\n    parks<span class=\"token punctuation\">.</span><span class=\"token function\">push</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">new</span> <span class=\"token class-name\">Themeparks<span class=\"token punctuation\">.</span>Parks</span><span class=\"token punctuation\">[</span>park<span class=\"token punctuation\">]</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>Name<span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">}</span>\n  res<span class=\"token punctuation\">.</span><span class=\"token function\">status</span><span class=\"token punctuation\">(</span><span class=\"token number\">200</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">json</span><span class=\"token punctuation\">(</span>parks<span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span></code></pre></div>\n<p>I should now be able to target the <code class=\"language-text\">/api/parks</code> endpoint and have a list of parks displayed on my server’s console.<br>\nTo test it locally I can run my server and navigate to <code class=\"language-text\">localhost:3000/api/parks</code> which displays a <strong>long</strong> list of theme parks.</p>\n<p>An application to this endpoint could be to return an array of Park objects to my client in order to inform the user of the supported parks.</p>\n<p><br><br></p>\n<h3 id=\"deploying-it-to-heroku\"><a href=\"#deploying-it-to-heroku\" aria-label=\"deploying it to heroku permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Deploying it to Heroku</h3>\n<p>Deploying to Heroku is extremely easy:</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token comment\"># Start by initializing your repository</span>\n<span class=\"token function\">git</span> init\n<span class=\"token comment\"># Create a .gitignore file and ignore the node_modules folder</span>\n<span class=\"token keyword\">echo</span> <span class=\"token string\">\"/node_modules\"</span> <span class=\"token operator\">></span> .gitignore\n<span class=\"token comment\"># Add and commit all of the other files</span>\n<span class=\"token function\">git</span> <span class=\"token function\">add</span> <span class=\"token keyword\">.</span>\n<span class=\"token function\">git</span> commit -m <span class=\"token string\">\"Initial commit\"</span>\n<span class=\"token comment\"># Set up the remote to push to as the one created by Heroku</span>\n<span class=\"token comment\"># Replace ancient-garden-55847 by the name of your Heroku project</span>\nheroku git:remote -a ancient-garden-55847\n<span class=\"token comment\"># Push everything</span>\n<span class=\"token function\">git</span> push heroku master</code></pre></div>\n<p>Once pushed, Heroku will deploy your server in a matter of seconds, head to the Heroku dashboard and make sure your build has succeeded in the <code class=\"language-text\">Latest activity</code> panel.</p>\n<p>You can now navigate to your API’s URL (or click on Open app) and test it out in any browser !</p>\n<p>In my case <a href=\"https://ancient-garden-55847.herokuapp.com/api/parks\">https://ancient-garden-55847.herokuapp.com/api/parks</a> returns a list of parks !</p>\n<p>Please note that Heroku’s free version has your server sleep when not used for a certain period of time, so if it’s the first time you’re launching it it will probably take more time than usual.</p>\n<p><br><br></p>\n<h3 id=\"wrapping-it-up\"><a href=\"#wrapping-it-up\" aria-label=\"wrapping it up permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Wrapping it up</h3>\n<p>We covered how to set up a very basic Node API from scratch and how to deploy it on the great platform that is Heroku. From here, you can build anything you want using the vast documentation that can be found anywhere on the web.</p>\n<p>I hope that this post was helpful to some of you,</p>\n<p>Happy coding,<br>\n<a href=\"https://twitter.com/christo_kade\">@christo_kade</a></p>","fields":{"slug":"/posts/heroku-api","tagSlugs":["/tag/node/","/tag/javascript/","/tag/api/"]},"frontmatter":{"date":"2017-12-28","description":"It's free and easy to set up.","tags":["Node","Javascript","API"],"title":"Deploying an API to Heroku"}}},"pageContext":{"isCreatedByStatefulCreatePages":false,"slug":"/posts/heroku-api"}}