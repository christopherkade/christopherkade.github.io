{"data":{"markdownRemark":{"id":"119a82e7-d62f-59e0-812c-16088b652727","html":"<p>Everybody knows about <a href=\"https://electronjs.org/\">Electron</a>, it’s one of those open-source tools that the community is really grateful for as it gives us the liberty to develop amazing things such as the text editor I’m currently using: <a href=\"https://atom.io/\">Atom</a>.</p>\n<p>If you’re not familiar with Electron, it’s a framework that allows anyone to develop <strong>cross platform</strong> desktop applications using Javascript, HTTP and CSS, pretty cool, huh?</p>\n<p>In this blog post, we’ll be coding a small app to track accomplishments (a glorified to-do application).</p>\n<p><br><br></p>\n<h3 id=\"getting-started\"><a href=\"#getting-started\" aria-label=\"getting started permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Getting started</h3>\n<p>Since Angular is my framework of choice to discover Electron, I’ll be using the awesome bootstrapping project <a href=\"https://github.com/maximegris/angular-electron\">angular-electron</a> in order to get started as quickly as possible. This project offers great features, such as packaging my app into executables for Linux, Windows &#x26; Mac as easily as running <code class=\"language-text\">npm run electron:os</code>.</p>\n<p>So I clone the repository, install the dependencies &#x26; run it:</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token function\">git</span> clone https://github.com/maximegris/angular-electron.git\n<span class=\"token function\">npm</span> <span class=\"token function\">install</span>\n<span class=\"token function\">npm</span> start</code></pre></div>\n<p>Which opens the following window:</p>\n<p align=\"center\">\n  <img width=\"90%\" height=\"90%\" src=\"https://user-images.githubusercontent.com/15229355/33723183-db3892e0-db63-11e7-8cfe-5e68e3a345e8.png\">\n</p>\n<p>Note the inspection tool on the right, that’s because Electron uses <strong>Chromium</strong> to render my project, therefore I have access to the usual inspection tool.</p>\n<p><br><br></p>\n<h3 id=\"tweaking-everything-to-my-liking\"><a href=\"#tweaking-everything-to-my-liking\" aria-label=\"tweaking everything to my liking permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Tweaking everything to my liking</h3>\n<p>There are two things that I wish to change:</p>\n<ul>\n<li>I’ll use Sass instead of Scss</li>\n<li>I want to use the CSS framework <a href=\"https://bulma.io/\">Bulma</a></li>\n</ul>\n<br>\n<h4 id=\"scss-to-sass\"><a href=\"#scss-to-sass\" aria-label=\"scss to sass permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Scss to Sass</h4>\n<p>All I need to do is tell <code class=\"language-text\">angular-cli</code> that I’m using Sass instead of Scss, change the existing file extensions and change a line in the <code class=\"language-text\">webpack</code> configuration.</p>\n<p>I first run <code class=\"language-text\">ng set defaults.styleExt sass</code>, then I change the extensions of the following files: <code class=\"language-text\">styles.scss</code>, <code class=\"language-text\">app.component.scss</code>, <code class=\"language-text\">home.component.scss</code> without forgetting to adjust the syntax of their contents.<br>\nAnd finally, I head to <code class=\"language-text\">webpack.config.js</code> and update the following block:</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">const</span> styles <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token string\">'./src/styles.scss'</span><span class=\"token punctuation\">]</span></code></pre></div>\n<p>I can now use Sass in my Angular project.</p>\n<br>\n<h4 id=\"using-bulma\"><a href=\"#using-bulma\" aria-label=\"using bulma permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Using Bulma</h4>\n<p>First, run:<br>\n<code class=\"language-text\">npm install bulma</code></p>\n<p>Then head to <code class=\"language-text\">styles.sass</code> and add the following lines:</p>\n<div class=\"gatsby-highlight\" data-language=\"sass\"><pre class=\"language-sass\"><code class=\"language-sass\"><span class=\"token atrule-line\"><span class=\"token atrule\">@import</span> ../node_modules/bulma/sass/utilities/initial-variables</span>\n<span class=\"token atrule-line\"><span class=\"token atrule\">@import</span> ../node_modules/bulma/sass/utilities/functions</span>\n\n<span class=\"token comment\">// Contents of the file</span>\n\n<span class=\"token atrule-line\"><span class=\"token atrule\">@import</span> \"~bulma\"</span></code></pre></div>\n<p>Now that everything is ready, I can start coding my application.</p>\n<p><br><br></p>\n<h2 id=\"step-1-the-initial-requirements\"><a href=\"#step-1-the-initial-requirements\" aria-label=\"step 1 the initial requirements permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Step 1: The initial requirements</h2>\n<p>My application will contains a navigation bar to move from one list to another and a content panel to display the TODOs (and their status).</p>\n<p>Therefore I’ll need two distinct components, let’s generate the nav with <code class=\"language-text\">angular-cli</code> and use the existing <code class=\"language-text\">home</code> component as our content panel:</p>\n<p><code class=\"language-text\">ng g component nav</code></p>\n<p>Which generates a <code class=\"language-text\">nav</code> folder containing my template, style sheet, component and test files.</p>\n<p>As my navigation is independent to the currently existing routing, I’ll add it parallel to my <code class=\"language-text\">router-outlet</code> like such:</p>\n<div class=\"gatsby-highlight\" data-language=\"html\"><pre class=\"language-html\"><code class=\"language-html\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>app-nav</span><span class=\"token punctuation\">></span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>app-nav</span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>router-outlet</span><span class=\"token punctuation\">></span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>router-outlet</span><span class=\"token punctuation\">></span></span></code></pre></div>\n<p>Which displays:</p>\n<p align=\"center\">\n  <img width=\"90%\" height=\"90%\" src=\"https://user-images.githubusercontent.com/15229355/33724972-c3f7d4d8-db68-11e7-9e3c-cc2bf780d83d.png\">\n</p>\n<p><em>Note the little “nav works!” on top of the window.</em></p>\n<p>Let’s now make it look like an actual navigation bar:</p>\n<p align=\"center\">\n  <img width=\"90%\" height=\"90%\" src=\"https://user-images.githubusercontent.com/15229355/33726862-308d767a-db6e-11e7-8265-0e8a48c06319.png\">\n</p>\n<p>As you can see, I have made some changes:</p>\n<ul>\n<li>The navbar is now a section with a <code class=\"language-text\">fixed</code> position, containing several <em>Lists</em> that will allow our user to navigate through the application.</li>\n<li>I have added a background picture I find pretty, if you know where it is, please let me know :-)</li>\n</ul>\n<p><br><br></p>\n<h2 id=\"step-2-the-essential-feature\"><a href=\"#step-2-the-essential-feature\" aria-label=\"step 2 the essential feature permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Step 2: The essential feature</h2>\n<p>I now want to add actual Todos for each list and display them. Here is the current model for a <code class=\"language-text\">List</code>:</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">export</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">List</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token comment\">// A list has a generic default name</span>\n  name<span class=\"token punctuation\">:</span> string <span class=\"token operator\">=</span> <span class=\"token string\">'New List'</span>\n  <span class=\"token comment\">// Each list contains a list of Todos</span>\n  todos<span class=\"token punctuation\">:</span> Todo<span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>And the model for a Todo element:</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">export</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">Todo</span> <span class=\"token punctuation\">{</span>\n  name<span class=\"token punctuation\">:</span> string <span class=\"token operator\">=</span> <span class=\"token string\">'New TODO'</span>\n  description<span class=\"token punctuation\">:</span> string\n  <span class=\"token comment\">// A Todo element is either done or in progress</span>\n  done<span class=\"token punctuation\">:</span> boolean <span class=\"token operator\">=</span> <span class=\"token boolean\">false</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>All I have to do, is to add a button to create a new Todo, once clicked, I’ll simply push a newly created <code class=\"language-text\">Todo</code> into my currently displayed <code class=\"language-text\">List</code>s array and display said array with an <code class=\"language-text\">ngFor</code>. With all of that said, here is the result:</p>\n<p align=\"center\">\n  <img width=\"90%\" height=\"90%\" src=\"https://user-images.githubusercontent.com/15229355/33740261-f40fa0c2-db97-11e7-84e5-ff9520be882f.png\">\n</p>\n<p>Note the undocumented changes such as the ability to create a new List (which uses the same concept applied to create a new Todo), the ability to mark a Todo as done and the ability to edit the name of a List. All of this is very basic and doesn’t really need to be detailed.</p>\n<p><br><br></p>\n<h2 id=\"to-be-continued\"><a href=\"#to-be-continued\" aria-label=\"to be continued permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>To be continued</h2>\n<p>Next steps will involve having a clean and professional design, saving the TODOs locally (in order to retrieve them from one session to another) and many more steps to make this little application as perfect as it can be.</p>","fields":{"slug":"/posts/intro-electron","tagSlugs":["/tag/javascript/","/tag/angular/","/tag/electron/"]},"frontmatter":{"date":"2017-12-20","description":"Lots of apps you might use on a daily basis use Electron.","tags":["Javascript","Angular","Electron"],"title":"Coding a desktop app with Electron and Angular"}}},"pageContext":{"isCreatedByStatefulCreatePages":false,"slug":"/posts/intro-electron"}}